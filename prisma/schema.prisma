generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model articles {
  id                   Int                    @id @default(autoincrement())
  rss_feed_id          Int?
  guid                 String                 @unique(map: "guid") @db.VarChar(255)
  title                String?                @db.VarChar(255)
  description          String?                @db.Text
  url                  String?                @db.VarChar(255)
  thumbnail_image      String?                @db.VarChar(255)
  category             String?                @db.VarChar(255)
  author               String?                @db.VarChar(255)
  created_at           DateTime?              @db.DateTime(0)
  modified_at          DateTime?              @db.DateTime(0)
  summary              String?                @db.Text
  content_encoded      String?                @db.Text
  meta_title           String?                @db.VarChar(255)
  meta_description     String?                @db.Text
  meta_keywords        String?                @db.Text
  website_id           Int?
  rss_feeds            rss_feeds?             @relation(fields: [rss_feed_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "articles_ibfk_1")
  websites             websites?              @relation(fields: [website_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "articles_ibfk_2")
  output_feed_articles output_feed_articles[]

  @@index([rss_feed_id], map: "rss_feed_id")
  @@index([website_id], map: "website_id")
}

model categories {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  slug             String         @unique(map: "slug") @db.VarChar(255)
  website_id       Int?
  parent_id        Int?
  websites         websites?      @relation(fields: [website_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categories_ibfk_1")
  categories       categories?    @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categories_ibfk_2")
  other_categories categories[]   @relation("categoriesTocategories")
  output_feeds     output_feeds[]

  @@index([parent_id], map: "parent_id")
  @@index([website_id], map: "website_id")
}

model cron_jobs {
  id             Int           @id @default(autoincrement())
  output_feed_id Int?
  cron_timing    String?       @db.VarChar(50)
  output_feeds   output_feeds? @relation(fields: [output_feed_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cron_jobs_ibfk_1")

  @@index([output_feed_id], map: "output_feed_id")
}

model output_feed_articles {
  id                   Int           @id @default(autoincrement())
  output_feed_id       Int?
  article_id           Int?
  published_at         DateTime?     @db.DateTime(0)
  is_published_twitter Boolean?      @default(false)
  is_published_fb      Boolean?      @default(false)
  is_published_insta   Boolean?      @default(false)
  is_published_youtube Boolean?      @default(false)
  output_feeds         output_feeds? @relation(fields: [output_feed_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "output_feed_articles_ibfk_1")
  articles             articles?     @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "output_feed_articles_ibfk_2")

  @@index([article_id], map: "article_id")
  @@index([output_feed_id], map: "output_feed_id")
}

model output_feeds {
  id                   Int                    @id @default(autoincrement())
  feed_name            String                 @db.VarChar(255)
  feed_url             String                 @db.VarChar(255)
  category_id          Int?
  website_id           Int?
  cron_jobs            cron_jobs[]
  output_feed_articles output_feed_articles[]
  categories           categories?            @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "output_feeds_ibfk_1")
  websites             websites?              @relation(fields: [website_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "output_feeds_ibfk_2")
  created_at   DateTime       @default(now()) @db.DateTime(0)
  modified_at  DateTime       @default(now()) @db.DateTime(0)

  @@index([category_id], map: "category_id")
  @@index([website_id], map: "website_id")
}

model prompts {
  id         Int       @id @default(autoincrement())
  content    String    @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model rss_feeds {
  id         Int        @id @default(autoincrement())
  url        String     @db.VarChar(255)
  website_id Int?
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  articles   articles[]
  websites   websites?  @relation(fields: [website_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rss_feeds_ibfk_1")

  @@index([website_id], map: "website_id")
}

model websites {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  url          String         @db.VarChar(255)
  languages    String         @default("English") @db.VarChar(200)
  created_at   DateTime       @default(now()) @db.DateTime(0)
  modified_at  DateTime       @default(now()) @db.DateTime(0)
  articles     articles[]
  categories   categories[]
  output_feeds output_feeds[]
  rss_feeds    rss_feeds[]
}
